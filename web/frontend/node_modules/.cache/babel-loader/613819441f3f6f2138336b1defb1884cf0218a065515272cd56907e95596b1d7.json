{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\VS CODE UPDATES\\\\C-TRADER TRADING BOT\\\\web\\\\frontend\\\\src\\\\components\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LiveChart() {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n    chartInstance.current = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [{\n          label: \"Live Price\",\n          data: [],\n          borderColor: \"#00FFB9\",\n          borderWidth: 2,\n          tension: 0.4\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            ticks: {\n              color: \"#ccc\"\n            }\n          },\n          y: {\n            ticks: {\n              color: \"#ccc\"\n            }\n          }\n        }\n      }\n    });\n\n    // Connect to backend WebSocket\n    const socket = new WebSocket(\"ws://127.0.0.1:8000/ws/chart\");\n    socket.onopen = () => setConnected(true);\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      const time = new Date(data.timestamp).toLocaleTimeString();\n      const price = data.price;\n      const chart = chartInstance.current;\n      chart.data.labels.push(time);\n      chart.data.datasets[0].data.push(price);\n      if (chart.data.labels.length > 30) {\n        chart.data.labels.shift();\n        chart.data.datasets[0].data.shift();\n      }\n      chart.update();\n    };\n    socket.onerror = err => console.error(\"WebSocket error:\", err);\n    socket.onclose = () => setConnected(false);\n    return () => socket.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#1f2833\",\n      padding: 20,\n      borderRadius: 12,\n      height: 450\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#fff\",\n        textAlign: \"center\"\n      },\n      children: \"\\uD83D\\uDCCA Live Renko + EMA + Supertrend Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#fff\",\n        textAlign: \"center\"\n      },\n      children: [\"WebSocket: \", connected ? \"Connected ‚úÖ\" : \"Disconnected ‚ùå\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveChart, \"v7txFDOf1Qbw04mArYDNSXmKPP8=\");\n_c = LiveChart;\nvar _c;\n$RefreshReg$(_c, \"LiveChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","LiveChart","_s","chartRef","chartInstance","connected","setConnected","ctx","current","getContext","type","data","labels","datasets","label","borderColor","borderWidth","tension","options","responsive","maintainAspectRatio","scales","x","ticks","color","y","socket","WebSocket","onopen","onmessage","event","JSON","parse","time","Date","timestamp","toLocaleTimeString","price","chart","push","length","shift","update","onerror","err","console","error","onclose","close","style","background","padding","borderRadius","height","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/VS CODE UPDATES/C-TRADER TRADING BOT/web/frontend/src/components/Chart.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default function LiveChart() {\r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext(\"2d\");\r\n\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: \"Live Price\",\r\n            data: [],\r\n            borderColor: \"#00FFB9\",\r\n            borderWidth: 2,\r\n            tension: 0.4,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: { ticks: { color: \"#ccc\" } },\r\n          y: { ticks: { color: \"#ccc\" } },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Connect to backend WebSocket\r\n    const socket = new WebSocket(\"ws://127.0.0.1:8000/ws/chart\");\r\n\r\n    socket.onopen = () => setConnected(true);\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      const time = new Date(data.timestamp).toLocaleTimeString();\r\n      const price = data.price;\r\n\r\n      const chart = chartInstance.current;\r\n      chart.data.labels.push(time);\r\n      chart.data.datasets[0].data.push(price);\r\n\r\n      if (chart.data.labels.length > 30) {\r\n        chart.data.labels.shift();\r\n        chart.data.datasets[0].data.shift();\r\n      }\r\n\r\n      chart.update();\r\n    };\r\n\r\n    socket.onerror = (err) => console.error(\"WebSocket error:\", err);\r\n    socket.onclose = () => setConnected(false);\r\n\r\n    return () => socket.close();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"#1f2833\",\r\n        padding: 20,\r\n        borderRadius: 12,\r\n        height: 450,\r\n      }}\r\n    >\r\n      <h2 style={{ color: \"#fff\", textAlign: \"center\" }}>\r\n        üìä Live Renko + EMA + Supertrend Chart\r\n      </h2>\r\n      <canvas ref={chartRef} style={{ width: \"100%\", height: \"400px\" }} />\r\n      <p style={{ color: \"#fff\", textAlign: \"center\" }}>\r\n        WebSocket: {connected ? \"Connected ‚úÖ\" : \"Disconnected ‚ùå\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}