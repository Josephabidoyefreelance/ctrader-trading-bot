{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\VS CODE UPDATES\\\\C-TRADER TRADING BOT\\\\web\\\\frontend\\\\src\\\\components\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LiveChart() {\n  _s();\n  const chartRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n    const chart = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [{\n          label: \"Price\",\n          data: [],\n          borderColor: \"green\",\n          tension: 0.3\n        }, {\n          label: \"EMA100\",\n          data: [],\n          borderColor: \"orange\",\n          tension: 0.3\n        }, {\n          label: \"EMA300\",\n          data: [],\n          borderColor: \"red\",\n          tension: 0.3\n        }, {\n          label: \"Supertrend\",\n          data: [],\n          borderColor: \"blue\",\n          borderDash: [5, 5],\n          tension: 0.3\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          }\n        }\n      }\n    });\n    setChartInstance(chart);\n    const socket = new WebSocket(\"ws://127.0.0.1:8000/ws/chart\");\n    socket.onmessage = event => {\n      var _chart$data$datasets$, _chart$data$datasets$2, _chart$data$datasets$3;\n      const data = JSON.parse(event.data);\n      if (!chart) return;\n      chart.data.labels.push(data.timestamp);\n      chart.data.datasets[0].data.push(data.price);\n      chart.data.datasets[1].data.push(data.ema100);\n      chart.data.datasets[2].data.push(data.ema300);\n      chart.data.datasets[3].data.push(data.supertrend);\n\n      // Add signal as dot\n      if (data.signal === \"BUY\") (_chart$data$datasets$ = chart.data.datasets[0].pointBackgroundColor) === null || _chart$data$datasets$ === void 0 ? void 0 : _chart$data$datasets$.push(\"green\");else if (data.signal === \"SELL\") (_chart$data$datasets$2 = chart.data.datasets[0].pointBackgroundColor) === null || _chart$data$datasets$2 === void 0 ? void 0 : _chart$data$datasets$2.push(\"red\");else (_chart$data$datasets$3 = chart.data.datasets[0].pointBackgroundColor) === null || _chart$data$datasets$3 === void 0 ? void 0 : _chart$data$datasets$3.push(\"transparent\");\n\n      // Keep last 50 points\n      if (chart.data.labels.length > 50) {\n        chart.data.labels.shift();\n        chart.data.datasets.forEach(d => d.data.shift());\n        chart.data.datasets.forEach(d => {\n          var _d$pointBackgroundCol;\n          return (_d$pointBackgroundCol = d.pointBackgroundColor) === null || _d$pointBackgroundCol === void 0 ? void 0 : _d$pointBackgroundCol.shift();\n        });\n      }\n      chart.update();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef,\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_s(LiveChart, \"mxEuazXhvYq3z2SUX35ki5IOCuY=\");\n_c = LiveChart;\nvar _c;\n$RefreshReg$(_c, \"LiveChart\");","map":{"version":3,"names":["useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","LiveChart","_s","chartRef","chartInstance","setChartInstance","ctx","current","getContext","chart","type","data","labels","datasets","label","borderColor","tension","borderDash","options","responsive","plugins","legend","position","socket","WebSocket","onmessage","event","_chart$data$datasets$","_chart$data$datasets$2","_chart$data$datasets$3","JSON","parse","push","timestamp","price","ema100","ema300","supertrend","signal","pointBackgroundColor","length","shift","forEach","d","_d$pointBackgroundCol","update","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/VS CODE UPDATES/C-TRADER TRADING BOT/web/frontend/src/components/Chart.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default function LiveChart() {\r\n  const chartRef = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext(\"2d\");\r\n    const chart = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          { label: \"Price\", data: [], borderColor: \"green\", tension: 0.3 },\r\n          { label: \"EMA100\", data: [], borderColor: \"orange\", tension: 0.3 },\r\n          { label: \"EMA300\", data: [], borderColor: \"red\", tension: 0.3 },\r\n          { label: \"Supertrend\", data: [], borderColor: \"blue\", borderDash: [5,5], tension: 0.3 },\r\n        ],\r\n      },\r\n      options: { responsive: true, plugins: { legend: { position: \"top\" } } },\r\n    });\r\n    setChartInstance(chart);\r\n\r\n    const socket = new WebSocket(\"ws://127.0.0.1:8000/ws/chart\");\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (!chart) return;\r\n\r\n      chart.data.labels.push(data.timestamp);\r\n      chart.data.datasets[0].data.push(data.price);\r\n      chart.data.datasets[1].data.push(data.ema100);\r\n      chart.data.datasets[2].data.push(data.ema300);\r\n      chart.data.datasets[3].data.push(data.supertrend);\r\n\r\n      // Add signal as dot\r\n      if (data.signal === \"BUY\") chart.data.datasets[0].pointBackgroundColor?.push(\"green\");\r\n      else if (data.signal === \"SELL\") chart.data.datasets[0].pointBackgroundColor?.push(\"red\");\r\n      else chart.data.datasets[0].pointBackgroundColor?.push(\"transparent\");\r\n\r\n      // Keep last 50 points\r\n      if (chart.data.labels.length > 50) {\r\n        chart.data.labels.shift();\r\n        chart.data.datasets.forEach(d => d.data.shift());\r\n        chart.data.datasets.forEach(d => d.pointBackgroundColor?.shift());\r\n      }\r\n\r\n      chart.update();\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={chartRef} style={{ width: \"100%\", height: \"500px\" }} />;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}